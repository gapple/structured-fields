name: PHP Composer

on:
  push:
    branches:
      - develop
      - v*
  pull_request:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4', '8.0', '8.1']
        experimental: [false]
    env:
      code-coverage-version: '7.4'

    name: PHP ${{ matrix.php-versions }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP ${{ matrix.php-versions }} without code coverage
      if: matrix.php-versions != env.code-coverage-version || github.event_name == 'schedule'
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: none
        tools: cs2pr
    - name: Setup PHP ${{ matrix.php-versions }} with code coverage
      if: matrix.php-versions == env.code-coverage-version && github.event_name != 'schedule'
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug
        tools: cs2pr

    - name: Setup Problem Matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
        echo "::set-output name=date::$(date "+%m")"

    - uses: actions/cache@v2
      id: cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.composer-cache.outputs.date }}-${{ matrix.php-versions }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-composer-${{ steps.composer-cache.outputs.date }}-${{ matrix.php-versions }}-
          ${{ runner.os }}-composer-${{ steps.composer-cache.outputs.date }}-
          ${{ runner.os }}-composer-

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install PHP dependencies
      if: matrix.experimental == false
      run: composer update --prefer-dist --no-progress

    # Ignore platform requirements for experimental branches.
    - name: Install PHP experimental dependencies
      if: matrix.experimental
      run: composer update --ignore-platform-reqs --prefer-dist --no-progress

    - name: Run PHPUnit tests
      run: composer run-script phpunit

    - name: Check code style
      if: matrix.php-versions == env.code-coverage-version && github.event_name != 'schedule'
      run: composer run-script phpcs -- --report=checkstyle | cs2pr

    # Ensure the next test run fetches the latest test ruleset.
    - name: Cleanup composer cache
      if: steps.cache.outputs.cache-hit != 'true'
      run: rm -rf $(composer config cache-files-dir)/httpwg

    - name: Upload code coverage report
      if: matrix.php-versions == env.code-coverage-version && github.event_name != 'schedule'
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage
        path: tmp/code-coverage

    - name: Upload code coverage to codecov
      if: matrix.php-versions == env.code-coverage-version && github.event_name != 'schedule'
      uses: codecov/codecov-action@v1
      with:
        file: ./tmp/code-coverage/clover.xml
        flags: phpunit
